/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import practicamp.BaseDatos;
import practicamp.Desafio;

/**
 *
 * @author pcris
 */
public class GUIValidarDesafios extends javax.swing.JFrame {

    /**
     * Creates new form GUIValidarDesafios
     */
    public GUIValidarDesafios() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Aceptar = new javax.swing.JButton();
        MostrarDesafios = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaDesafios = new javax.swing.JList<>();
        MostrarDeb1 = new javax.swing.JButton();
        Rechazar = new javax.swing.JButton();
        MostrarFort1 = new javax.swing.JButton();
        MostrarDeb2 = new javax.swing.JButton();
        MostrarFort2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListaDeb1 = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        ListaFort1 = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        ListaDeb2 = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        ListaFort2 = new javax.swing.JList<>();
        AñadirDeb1 = new javax.swing.JButton();
        AñadirFort1 = new javax.swing.JButton();
        AñadirDeb2 = new javax.swing.JButton();
        AñadirFort2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Aceptar.setText("Validar Desafio");

        MostrarDesafios.setText("Mostrar Desafios");
        MostrarDesafios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarDesafiosActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(ListaDesafios);

        MostrarDeb1.setText("Debilidades del desafiante");
        MostrarDeb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarDeb1ActionPerformed(evt);
            }
        });

        Rechazar.setText("Rechazar Desafio");
        Rechazar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RechazarActionPerformed(evt);
            }
        });

        MostrarFort1.setText("Fortalezas del desafiante");
        MostrarFort1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarFort1ActionPerformed(evt);
            }
        });

        MostrarDeb2.setText("Debilidades del desafiado");
        MostrarDeb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarDeb2ActionPerformed(evt);
            }
        });

        MostrarFort2.setText("Fortalezas del desafiado");
        MostrarFort2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarFort2ActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(ListaDeb1);

        jScrollPane3.setViewportView(ListaFort1);

        jScrollPane4.setViewportView(ListaDeb2);

        jScrollPane5.setViewportView(ListaFort2);

        AñadirDeb1.setText("Añadir");

        AñadirFort1.setText("Añadir");

        AñadirDeb2.setText("Añadir");

        AñadirFort2.setText("Añadir");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MostrarDeb1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(AñadirDeb1))
                    .addComponent(MostrarDesafios, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(MostrarFort1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Rechazar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(AñadirFort1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(69, 69, 69)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(MostrarDeb2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(MostrarFort2))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Aceptar)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(46, 46, 46)
                                        .addComponent(AñadirDeb2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(AñadirFort2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(MostrarDesafios, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MostrarDeb1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MostrarFort1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MostrarDeb2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MostrarFort2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane4)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AñadirFort2)
                            .addComponent(AñadirDeb2))
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AñadirDeb1)
                            .addComponent(AñadirFort1))
                        .addGap(34, 34, 34)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Rechazar)
                    .addComponent(Aceptar))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MostrarDesafiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarDesafiosActionPerformed
        BaseDatos b = new BaseDatos();
        DefaultListModel dlm1 = new DefaultListModel();
        try {
            b.DeserializePro("Desafio");
        } catch (IOException ex) {
            Logger.getLogger(GUIValidarDesafios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUIValidarDesafios.class.getName()).log(Level.SEVERE, null, ex);
        }
        int i = b.getListadesafios().size();
        for (int j = 0; j < i; j++) {
            if(b.getListadesafios().get(j).getEstado()==1){
            dlm1.addElement(b.getListadesafios().get(j).getDesafiado().getNombre());
        }
        }
        ListaDesafios.setModel(dlm1);
    }//GEN-LAST:event_MostrarDesafiosActionPerformed

    private void MostrarFort2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarFort2ActionPerformed
             if (!(ListaDesafios.getSelectedValue()==null)){
        DefaultListModel dlm1 = new DefaultListModel();
        BaseDatos b = new BaseDatos();
        try {
            b.DeserializePro("Desafio");
        } catch (IOException ex) {
            Logger.getLogger(GUIValidarDesafios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUIValidarDesafios.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Desafio desafio : b.getListadesafios()) {
            if ((desafio.getDesafiado().getNombre().equals(ListaDesafios.getSelectedValue())) && (desafio.getEstado() == 1)) {
                int i = desafio.getPersonajeDesafiado().getFortalezas().size();               
                for (int j = 0; j < i; j++) {
                    dlm1.addElement(desafio.getPersonajeDesafiado().getFortalezas().get(j).getName());
                }
            }
        }
                ListaFort2.setModel(dlm1); 
             }// TODO add your handling code here:
    }//GEN-LAST:event_MostrarFort2ActionPerformed

    private void MostrarDeb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarDeb1ActionPerformed
               if (!(ListaDesafios.getSelectedValue()==null)){
        DefaultListModel dlm1 = new DefaultListModel();
        BaseDatos b = new BaseDatos();
        try {
            b.DeserializePro("Desafio");
        } catch (IOException ex) {
            Logger.getLogger(GUIValidarDesafios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUIValidarDesafios.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Desafio desafio : b.getListadesafios()) {
            if ((desafio.getDesafiado().getNombre().equals(ListaDesafios.getSelectedValue())) && (desafio.getEstado() == 1)) {
                int i = desafio.getPersonajeDesafiante().getDebilidades().size();     
                System.out.println(desafio.getPersonajeDesafiante().getDebilidades().size());
                for (int j = 0; j < i; j++) {
                    dlm1.addElement(desafio.getPersonajeDesafiante().getDebilidades().get(j).getName());
                }
            }
        }
                ListaDeb1.setModel(dlm1); 
               }// TODO add your handling code here:
    }//GEN-LAST:event_MostrarDeb1ActionPerformed

    private void MostrarFort1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarFort1ActionPerformed
             if (!(ListaDesafios.getSelectedValue()==null)){
        DefaultListModel dlm1 = new DefaultListModel();
        BaseDatos b = new BaseDatos();
        try {
            b.DeserializePro("Desafio");
        } catch (IOException ex) {
            Logger.getLogger(GUIValidarDesafios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUIValidarDesafios.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Desafio desafio : b.getListadesafios()) {
            if ((desafio.getDesafiado().getNombre().equals(ListaDesafios.getSelectedValue())) && (desafio.getEstado() == 1)) {
                int i = desafio.getPersonajeDesafiante().getFortalezas().size();               
                for (int j = 0; j < i; j++) {
                    dlm1.addElement(desafio.getPersonajeDesafiante().getFortalezas().get(j).getName());
                }
            }
        }
                ListaFort1.setModel(dlm1);
             }
    }//GEN-LAST:event_MostrarFort1ActionPerformed

    private void MostrarDeb2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarDeb2ActionPerformed
        if (!(ListaDesafios.getSelectedValue()==null)){
        DefaultListModel dlm1 = new DefaultListModel();
        BaseDatos b = new BaseDatos();
        try {
            b.DeserializePro("Desafio");
        } catch (IOException ex) {
            Logger.getLogger(GUIValidarDesafios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUIValidarDesafios.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Desafio desafio : b.getListadesafios()) {
            if ((desafio.getDesafiado().getNombre().equals(ListaDesafios.getSelectedValue())) && (desafio.getEstado() == 1)) {
                int i = desafio.getPersonajeDesafiado().getDebilidades().size();               
                for (int j = 0; j < i; j++) {
                    dlm1.addElement(desafio.getPersonajeDesafiado().getDebilidades().get(j).getName());
                }
            }
        }
                ListaDeb2.setModel(dlm1);}
                // TODO add your handling code here:
    }//GEN-LAST:event_MostrarDeb2ActionPerformed

    private void RechazarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RechazarActionPerformed
        if (!(ListaDesafios.getSelectedValue()==null)){
            BaseDatos b = new BaseDatos();
            try {
                b.DeserializePro("Desafio");
            } catch (IOException ex) {
                Logger.getLogger(GUIValidarDesafios.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(GUIValidarDesafios.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                b.RechazarDesafio(ListaDesafios.getSelectedValue());
            } catch (IOException ex) {
                Logger.getLogger(GUIValidarDesafios.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_RechazarActionPerformed

    /**
             * @param args the command line arguments
             */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIValidarDesafios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIValidarDesafios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIValidarDesafios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIValidarDesafios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIValidarDesafios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Aceptar;
    private javax.swing.JButton AñadirDeb1;
    private javax.swing.JButton AñadirDeb2;
    private javax.swing.JButton AñadirFort1;
    private javax.swing.JButton AñadirFort2;
    private javax.swing.JList<String> ListaDeb1;
    private javax.swing.JList<String> ListaDeb2;
    private javax.swing.JList<String> ListaDesafios;
    private javax.swing.JList<String> ListaFort1;
    private javax.swing.JList<String> ListaFort2;
    private javax.swing.JButton MostrarDeb1;
    private javax.swing.JButton MostrarDeb2;
    private javax.swing.JButton MostrarDesafios;
    private javax.swing.JButton MostrarFort1;
    private javax.swing.JButton MostrarFort2;
    private javax.swing.JButton Rechazar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    // End of variables declaration//GEN-END:variables
}

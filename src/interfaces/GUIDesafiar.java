/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import java.awt.HeadlessException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import personajes.Demonio;
import personajes.Esbirro;
import personajes.Ghoul;
import personajes.Humano;
import personajes.Personaje;
import practicamp.BaseDatos;
import practicamp.Desafio;
import practicamp.Usuario;

/**
 *
 * @author pcris
 */
public class GUIDesafiar extends javax.swing.JFrame {

    private Usuario usuario;
    private BaseDatos base;
    private ArrayList<Esbirro> listaEsbirros = new ArrayList<Esbirro>();
    /**
     * Creates new form GUIDesafiar
     */
    @SuppressWarnings("unchecked")
    public GUIDesafiar(Usuario usuario) {
        initComponents();
        this.usuario = usuario;
        this.base = new BaseDatos();
        initializeListaPersonajes(usuario);
        initializeListaAdversarios();
        this.setLocationRelativeTo(null);
    }

    private void initializeListaPersonajes(Usuario usuario) {
        DefaultListModel dlm = new DefaultListModel();
        for (Personaje p : usuario.getPersonajes()) {
            dlm.addElement(p.getNombre());
        }
        personajes.setModel(dlm);
    }
    
    private void initializeListaAdversarios(){
        DefaultListModel dlm = new DefaultListModel();
        deserialize(base, "Usuario");
        for (Usuario adver : base.getListausuarios()) {
            if (!(adver.getNombre().equals(usuario.getNombre()))){
                dlm.addElement(adver.getNombre());
            }
        }
        desafiados.setModel(dlm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Aceptar = new javax.swing.JButton();
        Cancelar = new javax.swing.JButton();
        desafiado = new javax.swing.JLabel();
        oro = new javax.swing.JLabel();
        Oro = new javax.swing.JTextField();
        personaje = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        personajes = new javax.swing.JList<>();
        nombreEsbirro = new javax.swing.JTextField();
        nombre = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        seleccionEsbirro = new javax.swing.JList<>();
        añadirEsbirro = new javax.swing.JButton();
        precio = new javax.swing.JLabel();
        creacionEsbirro = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        desafiados = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(821, 631));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Aceptar.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        Aceptar.setText("Aceptar");
        Aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AceptarActionPerformed(evt);
            }
        });
        getContentPane().add(Aceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 530, -1, -1));

        Cancelar.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        Cancelar.setText("Cancelar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });
        getContentPane().add(Cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 530, -1, -1));

        desafiado.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        desafiado.setText("¿A quién vas a desafiar?");
        getContentPane().add(desafiado, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 253, -1));

        oro.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        oro.setText("¿Cuánto oro quieres apostar?");
        getContentPane().add(oro, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, 186, -1));

        Oro.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        Oro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OroActionPerformed(evt);
            }
        });
        getContentPane().add(Oro, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 260, 110, -1));

        personaje.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        personaje.setText("¿Cuál será tu personaje?");
        getContentPane().add(personaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 30, 169, -1));

        personajes.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        personajes.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Lorem ipsum" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(personajes);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 60, 280, -1));

        nombreEsbirro.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        getContentPane().add(nombreEsbirro, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 400, 121, -1));

        nombre.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        nombre.setText("Nombre");
        getContentPane().add(nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 370, 86, -1));

        seleccionEsbirro.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        seleccionEsbirro.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "10 monedas - Humano", "20 monedas - Ghoul", "30 monedas - Demonio" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(seleccionEsbirro);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 400, 200, 70));

        añadirEsbirro.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        añadirEsbirro.setText("Añadir");
        añadirEsbirro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirEsbirroActionPerformed(evt);
            }
        });
        getContentPane().add(añadirEsbirro, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 400, -1, -1));

        precio.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        precio.setText("Tablón de precios:");
        getContentPane().add(precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 370, 210, -1));

        creacionEsbirro.setFont(new java.awt.Font("Tempus Sans ITC", 0, 18)); // NOI18N
        creacionEsbirro.setText("Creación de esbirro (Opcional)");
        getContentPane().add(creacionEsbirro, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 320, 400, -1));

        desafiados.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        desafiados.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Lorem ipsum" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(desafiados);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 310, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OroActionPerformed

    private void AceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AceptarActionPerformed
        String adversario = desafiados.getSelectedValue();
        BaseDatos b = this.base;
        deserialize(b, "Usuario");
        retar(adversario, b);
    }//GEN-LAST:event_AceptarActionPerformed

    private void retar(String adversario, BaseDatos b) throws NumberFormatException, HeadlessException {
        if (!(adversario == (null))) {
            BaseDatos b2 = this.base;
            deserialize(b2,"Desafio");
            if (!(b2.yaDesafiado(adversario))) {
                String elegido = personajes.getSelectedValue();
                equipar(elegido, b, adversario);
            } else {
                JOptionPane.showMessageDialog(null, "Este usuario ya ha sido desafiado");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione a alguien como adversario");
        }
    }

    private void equipar(String elegido, BaseDatos b, String adversario) throws NumberFormatException, HeadlessException {
        if (!(elegido == (null))) {
            Personaje p = usuario.getPersonaje(elegido);
            if ((!(p.getArmaActiva() == null) || (p.getArmaduraActiva() == null))) {
                apostar(p, b, adversario);
            } else {
                JOptionPane.showMessageDialog(null, "Seleccione un arma y una armadura");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un personaje");
        }
    }

    private void apostar(Personaje p, BaseDatos b, String adversario) throws HeadlessException, NumberFormatException {
        if (!(Oro.getText().equals(""))) {
            if (usuario.getOro() >= Integer.valueOf(Oro.getText())) {
                oficializarDesafio(p, b, adversario);
            } else {
                JOptionPane.showMessageDialog(null, "No dispone de esa cantidad de oro");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No tengas miedo, apuesta algo de oro");
        }
    }

    private void oficializarDesafio(Personaje p, BaseDatos b, String adversario) throws NumberFormatException {
        p.setEsbirros(listaEsbirros);
        Desafio desafio = new Desafio(usuario, b.getUsuario(adversario), Integer.valueOf(Oro.getText()), p);
        
        b.actualizarUsuario(usuario);
        serialize(b, "Usuario");
        b.getListadesafios().add(desafio);
        serialize(b, "Desafio");
        
        GUIMenuUsuario i = new GUIMenuUsuario(usuario);
        i.setVisible(true);
        this.setVisible(false);
    }

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        GUIMenuUsuario g3 = new GUIMenuUsuario(usuario);
        g3.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_CancelarActionPerformed

    private void añadirEsbirroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirEsbirroActionPerformed
        if (!(seleccionEsbirro.getSelectedValue() == null)) {
            switch (seleccionEsbirro.getSelectedIndex()) {
                case 1:
                    if (usuario.getOro() >= 10) {
                        Humano h = new Humano(nombreEsbirro.getText(), 2, 0);
                        addMinion(h, 10);
                    } else {
                        JOptionPane.showMessageDialog(null, "Oro insuficiente");                //oro insuficiente
                    }
                    break;
                case 2:
                    if (usuario.getOro() >= 20) {
                        Ghoul g = new Ghoul(nombreEsbirro.getText(), 2, 0);
                        addMinion(g, 20);
                    } else {
                        JOptionPane.showMessageDialog(null, "Oro insuficiente");                //oro insuficiente
                    }
                    break;
                case 3:
                    if (usuario.getOro() >= 30) {
                        Demonio d = new Demonio(nombreEsbirro.getText(), 2, "Pacto del demonio " + nombreEsbirro.getText() + " con " + usuario.getNombre());
                        Random rand = new Random();
                        int j = rand.nextInt(3);
                        for (int i = 0; i <= j; i++) {
                            String s = Integer.toString(i);
                            Ghoul g = new Ghoul("Esbirro del demonio " + nombreEsbirro.getText() + " número " + s, 2, 0);
                        }
                        addMinion(d, 30);
                    } else {
                        JOptionPane.showMessageDialog(null, "Oro insuficiente");                //oro insuficiente
                    }

                    break;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione el tipo de esbirro");
        } 
    }//GEN-LAST:event_añadirEsbirroActionPerformed

    private void addMinion(Esbirro minion, int coste) {
        listaEsbirros.add(minion);
        usuario.setOro(usuario.getOro() - coste);
    }
    
    private void deserialize(BaseDatos b, String thing) {
        try {
            base.deserializePro(thing);
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(GUIDesafiar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void serialize(BaseDatos b, String thing) {
        try {
            b.serializePro(thing);
        } catch (IOException ex) {
            Logger.getLogger(GUIDesafiar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIDesafiar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIDesafiar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIDesafiar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIDesafiar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIDesafiar(usuario).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Aceptar;
    private javax.swing.JButton Cancelar;
    private javax.swing.JTextField Oro;
    private javax.swing.JButton añadirEsbirro;
    private javax.swing.JLabel creacionEsbirro;
    private javax.swing.JLabel desafiado;
    private javax.swing.JList<String> desafiados;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel nombre;
    private javax.swing.JTextField nombreEsbirro;
    private javax.swing.JLabel oro;
    private javax.swing.JLabel personaje;
    private javax.swing.JList<String> personajes;
    private javax.swing.JLabel precio;
    private javax.swing.JList<String> seleccionEsbirro;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import personajes.Demonio;
import personajes.Esbirro;
import personajes.Ghoul;
import personajes.Humano;
import personajes.Personaje;
import practicamp.BaseDatos;
import practicamp.Desafio;
import practicamp.Usuario;

/**
 *
 * @author pcris
 */
public class GUIDesafiar extends javax.swing.JFrame {

    private Usuario usuario;
    private BaseDatos base;
    private ArrayList<Esbirro> listaEsbirros = new ArrayList<Esbirro>();
    /**
     * Creates new form GUIDesafiar
     */
    @SuppressWarnings("unchecked")
    public GUIDesafiar(Usuario usuario) {
        this.usuario = usuario;
        initComponents();
        this.base = new BaseDatos();
                this.setLocationRelativeTo(null);
        DefaultListModel dlm1 = new DefaultListModel();
        int i = usuario.getPersonajes().size();
        for (int j = 0; j < i; j++) {
            dlm1.addElement(usuario.getPersonajes().get(j).getNombre());
        }
        Lista.setModel(dlm1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Aceptar = new javax.swing.JButton();
        Cancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Desafiado = new javax.swing.JTextField();
        Oro = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Lista = new javax.swing.JList<>();
        nombreEsbirro = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        seleccionEsbirro = new javax.swing.JList<>();
        añadirEsbirro = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Aceptar.setText("Aceptar");
        Aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AceptarActionPerformed(evt);
            }
        });

        Cancelar.setText("Cancelar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        jLabel1.setText("Usuario desafiado");

        jLabel2.setText("Oro apostado");

        Oro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OroActionPerformed(evt);
            }
        });

        jLabel3.setText("Personaje");

        jScrollPane1.setViewportView(Lista);

        jLabel4.setText("Nombre");

        seleccionEsbirro.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Humano", "Ghoul", "Demonio" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(seleccionEsbirro);

        añadirEsbirro.setText("Añadir");
        añadirEsbirro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirEsbirroActionPerformed(evt);
            }
        });

        jLabel5.setText("10");

        jLabel6.setText("20");

        jLabel7.setText("30");

        jLabel8.setText("Precio");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(Cancelar)
                .addGap(280, 280, 280))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Oro, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                                    .addComponent(Desafiado)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(290, 290, 290)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(nombreEsbirro, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(añadirEsbirro)))
                .addContainerGap(326, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(Desafiado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Oro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nombreEsbirro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(añadirEsbirro)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cancelar)
                    .addComponent(Aceptar))
                .addGap(76, 76, 76))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OroActionPerformed

    private void AceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AceptarActionPerformed
        String nombre = Desafiado.getText();
        BaseDatos b = this.base;
        try {
            b.DeserializePro("Usuario");
        } catch (IOException ex) {
            Logger.getLogger(GUIDesafiar.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUIDesafiar.class.getName()).log(Level.SEVERE, null, ex);
        }
        if ((b.pertenece(nombre))) {
            if (!(Oro.getText().equals(""))) {
                if (usuario.getOro() >= Integer.valueOf(Oro.getText())) {
                    if (!(Lista.getSelectedValue() == (null))) {
                        if ((!(usuario.getPersonaje(Lista.getSelectedValue()).getArmaActiva() == null)) && (!(usuario.getPersonaje(Lista.getSelectedValue()).getArmaduraActiva() == null))) {
                            BaseDatos b2 = this.base;
                            try {
                                b2.DeserializePro("Desafio");
                            } catch (IOException ex) {
                                Logger.getLogger(GUIDesafiar.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (ClassNotFoundException ex) {
                                Logger.getLogger(GUIDesafiar.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            if (!(b2.yaDesafiado(nombre))) {
                                Personaje p = usuario.getPersonaje(Lista.getSelectedValue());
                                p.setEsbirros(listaEsbirros);
                                Desafio desafio = new Desafio(usuario, b.getUsuario(nombre), Integer.valueOf(Oro.getText()), p);
                                usuario.setOro(usuario.getOro()-Integer.valueOf(Oro.getText()));
                                b.actualizarUsuario(usuario);
                                try {
                                    b.SerializePro("Usuario");
                                } catch (IOException ex) {
                                    Logger.getLogger(GUIDesafiar.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                b.getListadesafios().add(desafio);
                                try {
                                    b2.SerializePro("Desafio");
                                } catch (IOException ex) {
                                    Logger.getLogger(GUIDesafiar.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                GUIMenuUsuario i = new GUIMenuUsuario(usuario);
                                i.setVisible(true);
                                this.setVisible(false);
                            } else {
                                JOptionPane.showMessageDialog(null, "No tienes un arma y una armadura activa");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Este usuario ya ha sido desafiado");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Seleccione un personaje");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Oro insuficiente");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Introduzca la cantidad de oro apostada");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Usuario no encontrado");
        }
    }//GEN-LAST:event_AceptarActionPerformed

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        GUIMenuUsuario g3 = new GUIMenuUsuario(usuario);
        g3.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_CancelarActionPerformed

    private void añadirEsbirroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirEsbirroActionPerformed
        if (!(seleccionEsbirro.getSelectedValue() == null)) {
            switch (seleccionEsbirro.getSelectedIndex()) {
                case 1:
                    if (usuario.getOro() >= 10) {
                        Humano h = new Humano(nombreEsbirro.getText(), 2, 0);
                        listaEsbirros.add(h);
                        usuario.setOro(usuario.getOro() - 10);
                    } else {
                        JOptionPane.showMessageDialog(null, "Oro insuficiente");                //oro insuficiente
                    }
                    break;
                case 2:
                    if (usuario.getOro() >= 20) {
                        Ghoul g = new Ghoul(nombreEsbirro.getText(), 2, 0);
                        listaEsbirros.add(g);
                        usuario.setOro(usuario.getOro() - 20);
                    } else {
                        JOptionPane.showMessageDialog(null, "Oro insuficiente");                //oro insuficiente
                    }
                    break;
                case 3:
                    if (usuario.getOro() >= 30) {
                        Demonio d = new Demonio(nombreEsbirro.getText(), 2, "Pacto del demonio " + nombreEsbirro.getText() + " con " + usuario.getNombre());
                        Random rand = new Random();
                        int j = rand.nextInt(3);
                        for (int i = 0; i <= j; i++) {
                            String s = Integer.toString(i);
                            Ghoul g = new Ghoul("Esbirro del demonio " + nombreEsbirro.getText() + " número " + s, 2, 0);
                        }
                        listaEsbirros.add(d);
                        usuario.setOro(usuario.getOro() - 30);
                    } else {
                        JOptionPane.showMessageDialog(null, "Oro insuficiente");                //oro insuficiente
                    }

                    break;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione el tipo de esbirro");
        } 
    }//GEN-LAST:event_añadirEsbirroActionPerformed

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIDesafiar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIDesafiar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIDesafiar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIDesafiar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIDesafiar(usuario).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Aceptar;
    private javax.swing.JButton Cancelar;
    private javax.swing.JTextField Desafiado;
    private javax.swing.JList<String> Lista;
    private javax.swing.JTextField Oro;
    private javax.swing.JButton añadirEsbirro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nombreEsbirro;
    private javax.swing.JList<String> seleccionEsbirro;
    // End of variables declaration//GEN-END:variables
}

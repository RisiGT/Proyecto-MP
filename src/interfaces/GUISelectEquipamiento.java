/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import habilidades.Debilidad;
import habilidades.Fortaleza;
import interfacesPersonalizacion.GUIEditarPersonaje;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import practicamp.BaseDatos;
import practicamp.Usuario;

/**
 *
 * @author pcris
 */
public class GUISelectEquipamiento extends javax.swing.JFrame {

    // int Tipo;//el tipo de personaje(vampiro etc)
    private Usuario usuario;
    private BaseDatos b;

    /**
     * Creates new form GUICrearPersonaje2
     */
    public GUISelectEquipamiento(Usuario u) throws IOException, FileNotFoundException, ClassNotFoundException {
        initComponents();
        //this.Tipo = tipo;
        this.usuario = u;
        this.setLocationRelativeTo(null);
        //       b.DeserializePro("nombre");//todas
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MostrarArmas = new javax.swing.JButton();
        MostrarArmaduras = new javax.swing.JButton();
        Aceptar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaArmas = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        ListaArmaduras = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        listaPersonajes = new javax.swing.JList<>();
        MostrarPersonaje = new javax.swing.JButton();
        Cancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        MostrarArmas.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        MostrarArmas.setText("Mostrar Armas");
        MostrarArmas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarArmasActionPerformed(evt);
            }
        });

        MostrarArmaduras.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        MostrarArmaduras.setText("Mostrar Armaduras");
        MostrarArmaduras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarArmadurasActionPerformed(evt);
            }
        });

        Aceptar.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        Aceptar.setText("Aceptar");
        Aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AceptarActionPerformed(evt);
            }
        });

        ListaArmas.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(ListaArmas);

        ListaArmaduras.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        jScrollPane3.setViewportView(ListaArmaduras);

        listaPersonajes.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        jScrollPane5.setViewportView(listaPersonajes);

        MostrarPersonaje.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        MostrarPersonaje.setText("Mostrar Personaje");
        MostrarPersonaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarPersonajeActionPerformed(evt);
            }
        });

        Cancelar.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        Cancelar.setText("Cancelar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(MostrarArmaduras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MostrarArmas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MostrarPersonaje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(Cancelar)
                        .addGap(85, 85, 85)
                        .addComponent(Aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(MostrarPersonaje))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(MostrarArmas)))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(MostrarArmaduras)
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Cancelar)
                            .addComponent(Aceptar))
                        .addGap(31, 31, 31))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MostrarArmasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarArmasActionPerformed
        DefaultListModel dlm1 = new DefaultListModel();
        BaseDatos b = new BaseDatos();
        try {
            b.deserializePro("Arma");
        } catch (IOException ex) {
            Logger.getLogger(GUISelectEquipamiento.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUISelectEquipamiento.class.getName()).log(Level.SEVERE, null, ex);
        }
        int i = b.getListaArmas().size();
        for (int j = 0; j < i; j++) {
            dlm1.addElement(b.getListaArmas().get(j).getName());
        }
        ListaArmas.setModel(dlm1);
    }//GEN-LAST:event_MostrarArmasActionPerformed

    private void MostrarArmadurasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarArmadurasActionPerformed
        DefaultListModel dlm1 = new DefaultListModel();
        BaseDatos b = new BaseDatos();
        try {
            b.deserializePro("Armadura");
        } catch (IOException ex) {
            Logger.getLogger(GUISelectEquipamiento.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUISelectEquipamiento.class.getName()).log(Level.SEVERE, null, ex);
        }
        int i = b.getListaArmaduras().size();
        for (int j = 0; j < i; j++) {
            dlm1.addElement(b.getListaArmaduras().get(j).getName());
        }
        ListaArmaduras.setModel(dlm1);
    }//GEN-LAST:event_MostrarArmadurasActionPerformed

    private void AceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AceptarActionPerformed
        if (!(listaPersonajes.getSelectedValue() == null)) {
            if (!(ListaArmas.getSelectedValue() == null) && !(ListaArmaduras.getSelectedValue() == null)) {
                BaseDatos b = new BaseDatos();
                try {
                    b.deserializePro("Arma");
                } catch (IOException ex) {
                    Logger.getLogger(GUISelectEquipamiento.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(GUISelectEquipamiento.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    b.deserializePro("Armadura");
                } catch (IOException ex) {
                    Logger.getLogger(GUISelectEquipamiento.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(GUISelectEquipamiento.class.getName()).log(Level.SEVERE, null, ex);
                }
//        String nombre = Nombre.getText();
                //int salud = Integer.valueOf(Salud.getText());
                //int poder = Integer.valueOf(Poder.getText());
                int arma = ListaArmas.getSelectedIndex();
                int armadura = ListaArmaduras.getSelectedIndex();
//        int debilidades = ListaDebilidades.getSelectedIndex();

                switch (usuario.getPersonajes().get(listaPersonajes.getSelectedIndex()).getTipo()) {
                    case 1: {
                        //Vampiro v;
                        // v = new Vampiro(nombre, salud, poder, b.getListaArmas().get(arma), b.getListaArmaduras().get(armadura), this.Debilidades, this.Fortalezas);
                        // Usuario u = this.usuario;
                        usuario.getPersonajes().get(listaPersonajes.getSelectedIndex()).setArmaduraActiva(b.getListaArmaduras().get(armadura));
                        usuario.getPersonajes().get(listaPersonajes.getSelectedIndex()).setArmasActivas(b.getListaArmas().get(arma));
                        GUISelectHabilidad g3 = new GUISelectHabilidad(1, usuario, usuario.getPersonajes().get(listaPersonajes.getSelectedIndex()));
                        g3.setVisible(true);
                        this.setVisible(false);
                        break;
                    }
                    case 2: {
                        usuario.getPersonajes().get(listaPersonajes.getSelectedIndex()).setArmaduraActiva(b.getListaArmaduras().get(armadura));
                        usuario.getPersonajes().get(listaPersonajes.getSelectedIndex()).setArmasActivas(b.getListaArmas().get(arma));
                        GUISelectHabilidad g3 = new GUISelectHabilidad(2, usuario, usuario.getPersonajes().get(listaPersonajes.getSelectedIndex()));
                        g3.setVisible(true);
                        this.setVisible(false);
                        break;
                    }
                    default: {                      
                        usuario.getPersonajes().get(listaPersonajes.getSelectedIndex()).setArmaduraActiva(b.getListaArmaduras().get(armadura));
                        usuario.getPersonajes().get(listaPersonajes.getSelectedIndex()).setArmasActivas(b.getListaArmas().get(arma));
                        GUISelectHabilidad g3 = new GUISelectHabilidad(3, usuario, usuario.getPersonajes().get(listaPersonajes.getSelectedIndex()));
                        g3.setVisible(true);
                        this.setVisible(false);
                        break;
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Seleccione arma y armadura");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un personaje");
        }
    }//GEN-LAST:event_AceptarActionPerformed

    @SuppressWarnings("unchecked")
    private void MostrarPersonajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarPersonajeActionPerformed

        BaseDatos b = new BaseDatos();
        try {
            b.deserializePro("Usuario");
        } catch (IOException ex) {
            Logger.getLogger(GUIEditarPersonaje.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GUIEditarPersonaje.class.getName()).log(Level.SEVERE, null, ex);
        }

        DefaultListModel dlm = new DefaultListModel();

        int i = usuario.getPersonajes().size();
        for (int j = 0; j < i; j++) {
            System.out.println(usuario.getPersonajes().get(j).getNombre());
            dlm.addElement(usuario.getPersonajes().get(j).getNombre());
        }
        listaPersonajes.setModel(dlm);
        try {
            b.serializePro("Usuario");
        } catch (IOException ex) {
            Logger.getLogger(GUISelectEquipamiento.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_MostrarPersonajeActionPerformed

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        GUIMenuUsuario i = new GUIMenuUsuario(usuario);
        i.setVisible(true);
        this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_CancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUISelectEquipamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUISelectEquipamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUISelectEquipamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUISelectEquipamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new GUISelectEquipamiento(usuario).setVisible(true); //TIpo
                } catch (IOException ex) {
                    Logger.getLogger(GUISelectEquipamiento.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(GUISelectEquipamiento.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Aceptar;
    private javax.swing.JButton Cancelar;
    private javax.swing.JList<String> ListaArmaduras;
    private javax.swing.JList<String> ListaArmas;
    private javax.swing.JButton MostrarArmaduras;
    private javax.swing.JButton MostrarArmas;
    private javax.swing.JButton MostrarPersonaje;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JList<String> listaPersonajes;
    // End of variables declaration//GEN-END:variables

}

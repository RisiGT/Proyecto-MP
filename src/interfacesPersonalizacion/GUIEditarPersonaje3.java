/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfacesPersonalizacion;

import habilidades.Disciplina;
import habilidades.Don;
import habilidades.Habilidad;
import habilidades.Talento;
import interfacesAdmin.GUIOperador;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import personajes.Personaje;
import practicamp.BaseDatos;
import practicamp.Operador;
import practicamp.Usuario;

/**
 *
 * @author PcCom
 */
public class GUIEditarPersonaje3 extends javax.swing.JFrame {

    /**
     * Creates new form GUIEditarPersonaje3
     */
    private Usuario usuario;
    private Personaje personaje;
    private Operador operador;

    /**
     * Creates new form GUIEditarPersonaje2
     */
    public GUIEditarPersonaje3(Usuario u, Personaje p, Operador operador) {
        initComponents();
        this.operador = operador;
        this.usuario = u;
        this.personaje = p;
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Editar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaHabilidades = new javax.swing.JList<>();
        Mostrar = new javax.swing.JButton();
        dsd = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Ataque = new javax.swing.JTextField();
        Defensa = new javax.swing.JTextField();
        Cancelar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        label = new javax.swing.JLabel();
        Nombre = new javax.swing.JTextField();
        Variable = new javax.swing.JLabel();
        Var = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        Editar.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        Editar.setText("Guardar cambios");
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });

        ListaHabilidades.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        ListaHabilidades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListaHabilidadesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ListaHabilidades);

        Mostrar.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        Mostrar.setText("Mostrar Habilidades");
        Mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarActionPerformed(evt);
            }
        });

        dsd.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        dsd.setText("Ataque");

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        jLabel2.setText("Defensa");

        Ataque.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        Ataque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtaqueActionPerformed(evt);
            }
        });

        Defensa.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        Defensa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DefensaActionPerformed(evt);
            }
        });

        Cancelar.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        Cancelar.setText("Cancelar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tempus Sans ITC", 0, 18)); // NOI18N
        jLabel3.setText("Editar habilidades");

        label.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        label.setText("Nombre");

        Nombre.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        Nombre.setText(" ");
        Nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombreActionPerformed(evt);
            }
        });

        Variable.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        Variable.setText(" ");

        Var.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        Var.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label)
                            .addComponent(dsd, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Variable, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Var, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Defensa, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Ataque, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Mostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Editar)
                                .addGap(23, 23, 23)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cancelar))
                .addGap(72, 72, 72))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Mostrar)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label)
                            .addComponent(Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dsd)
                            .addComponent(Ataque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(Defensa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Variable)
                            .addComponent(Var, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Editar)
                            .addComponent(Cancelar))))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarActionPerformed
        BaseDatos b = new BaseDatos();
        switch (personaje.getTipo()) {
            case 1: {
                try {
                    b.deserializePro("Disciplina");
                } catch (IOException | ClassNotFoundException ex) {
                    Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(Level.SEVERE, null, ex);
                }
                DefaultListModel dlm = new DefaultListModel();
                int i = b.getListaDisciplinas().size();
                for (int j = 0; j < i; j++) {
                    dlm.addElement(b.getListaDisciplinas().get(j).getName());
                }
                ListaHabilidades.setModel(dlm);
                break;
            }
            case 2: {
                try {
                    b.deserializePro("Don");
                } catch (IOException ex) {
                    Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(Level.SEVERE, null, ex);
                }
                DefaultListModel dlm = new DefaultListModel();
                int i = b.getListaDones().size();
                for (int j = 0; j < i; j++) {
                    dlm.addElement(b.getListaDones().get(j).getName());
                }
                ListaHabilidades.setModel(dlm);
                break;
            }
            case 3: {
                try {
                    b.deserializePro("Talento");
                } catch (IOException ex) {
                    Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(Level.SEVERE, null, ex);
                }
                DefaultListModel dlm = new DefaultListModel();
                int i = b.getListaTalentos().size();
                for (int j = 0; j < i; j++) {
                    dlm.addElement(b.getListaTalentos().get(j).getName());
                }
                ListaHabilidades.setModel(dlm);
                break;
            }
        }
    }//GEN-LAST:event_MostrarActionPerformed

    private void AtaqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtaqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AtaqueActionPerformed

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
        BaseDatos b = new BaseDatos();
        if (!(ListaHabilidades.getSelectedValue() == null)) {
            if (!(Nombre.getText().equals(""))) {
                if (!(Ataque.getText().equals(""))) {
                    if (!(Defensa.getText().equals(""))) {
                        if (!(Var.getText().equals(""))) {
                            switch (personaje.getTipo()) {
                                case 1: {
                                    try {
                                        b.deserializePro("Disciplina");
                                    } catch (IOException ex) {
                                        Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(Level.SEVERE, null, ex);
                                    } catch (ClassNotFoundException ex) {
                                        Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                    Disciplina disciplina = b.getListaDisciplinas().get(ListaHabilidades.getSelectedIndex());
                                    disciplina.setName(Nombre.getText());
                                    disciplina.setAtaque(Integer.valueOf(Ataque.getText()));
                                    disciplina.setDefensa(Integer.valueOf(Defensa.getText()));
                                    disciplina.setCoste(Integer.valueOf(Var.getText()));
                                                                        System.out.println("7474");
                                    personaje.setHabilidadEspecial((disciplina));
                                    System.out.println("dsdssdsd");
                                }  
                                case 2: {
                                    try {
                                        b.deserializePro("Don");
                                    } catch (IOException ex) {
                                        Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(Level.SEVERE, null, ex);
                                    } catch (ClassNotFoundException ex) {
                                        Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                    Don don = b.getListaDones().get(ListaHabilidades.getSelectedIndex());
                                    don.setName(Nombre.getText());
                                    don.setAtaque(Integer.valueOf(Ataque.getText()));
                                    don.setDefensa(Integer.valueOf(Defensa.getText()));
                                    don.setMin(Integer.valueOf(Var.getText()));
                                    personaje.setHabilidadEspecial(don);
                                }
                                case 3: {
                                    try {
                                        b.deserializePro("Talento");
                                    } catch (IOException ex) {
                                        Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(Level.SEVERE, null, ex);
                                    } catch (ClassNotFoundException ex) {
                                        Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                    Talento talento = b.getListaTalentos().get(ListaHabilidades.getSelectedIndex());
                                    talento.setName(Nombre.getText());
                                    talento.setAtaque(Integer.valueOf(Ataque.getText()));
                                    talento.setDefensa(Integer.valueOf(Defensa.getText()));
                                    talento.setEdad(Integer.valueOf(Var.getText()));
                                    personaje.setHabilidadEspecial(talento);
                                }
                                                                System.out.println("bb");
                                usuario.getPersonajes().remove(personaje);
                                System.out.println("aa");
                                usuario.getPersonajes().add(personaje);
                                b.actualizarUsuario(usuario);
                                GUIOperador i = new GUIOperador(operador);
                                i.setVisible(true);
                                this.setVisible(false);
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Complete todos los campos");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Introduzca la defensa");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Introduzca el ataque");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Introduzca un nombre");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una habilidad");
        }
    }//GEN-LAST:event_EditarActionPerformed

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        GUIOperador i = new GUIOperador(operador);
        i.setVisible(true);
        this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_CancelarActionPerformed

    private void DefensaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DefensaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DefensaActionPerformed

    private void ListaHabilidadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListaHabilidadesMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ListaHabilidadesMouseClicked

    private void NombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NombreActionPerformed

    private void VarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VarActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        BaseDatos b = new BaseDatos();
        switch (personaje.getTipo()) {
            case 1: {
                try {
                    b.deserializePro("Disciplina");
                } catch (IOException | ClassNotFoundException ex) {
                    Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(Level.SEVERE, null, ex);
                }
                DefaultListModel dlm = new DefaultListModel();
                int i = b.getListaDisciplinas().size();
                for (int j = 0; j < i; j++) {
                    dlm.addElement(b.getListaDisciplinas().get(j).getName());
                }
                Variable.setText("Coste");
                ListaHabilidades.setModel(dlm);
                break;
            }
            case 2: {
                try {
                    b.deserializePro("Don");
                } catch (IOException ex) {
                    Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(Level.SEVERE, null, ex);
                }
                DefaultListModel dlm = new DefaultListModel();
                int i = b.getListaDones().size();
                for (int j = 0; j < i; j++) {
                    dlm.addElement(b.getListaDones().get(j).getName());
                }
                ListaHabilidades.setModel(dlm);
                Variable.setText("Mínimo");
                break;
            }
            case 3: {
                try {
                    b.deserializePro("Talento");
                } catch (IOException ex) {
                    Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(Level.SEVERE, null, ex);
                }
                DefaultListModel dlm = new DefaultListModel();
                int i = b.getListaTalentos().size();
                for (int j = 0; j < i; j++) {
                    dlm.addElement(b.getListaTalentos().get(j).getName());
                }
                Variable.setText("Edad");
                ListaHabilidades.setModel(dlm);
                break;
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIEditarPersonaje3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIEditarPersonaje3(usuario, personaje, operador).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Ataque;
    private javax.swing.JButton Cancelar;
    private javax.swing.JTextField Defensa;
    private javax.swing.JButton Editar;
    private javax.swing.JList<String> ListaHabilidades;
    private javax.swing.JButton Mostrar;
    private javax.swing.JTextField Nombre;
    private javax.swing.JTextField Var;
    private javax.swing.JLabel Variable;
    private javax.swing.JLabel dsd;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label;
    // End of variables declaration//GEN-END:variables
}
